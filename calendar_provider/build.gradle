apply plugin: 'com.android.application'

android {
//    compileSdkVersion 28
//    buildToolsVersion "28.0.3"
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.android.providers.calendar2"

        minSdkVersion 19
        targetSdkVersion 30

        versionCode 1
        versionName "1.0"

        testApplicationId "com.android.providers.calendar.tests"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    //让代码能够使用这个jar里面的方法和类，只在build的时候使用jar，不会把jar编译进apk
    compileOnly files('libs/framework.jar')

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(path: ':common')
    implementation project(path: ':calendar_common')
    implementation 'com.google.guava:guava:30.0-android'
    //implementation files('libs/framework.jar')
}

//在model的build.gradle里面加入自动更改model.iml文件的代码
preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new Node( parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}

